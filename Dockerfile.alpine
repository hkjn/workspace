# The workspace image is a environment for technical work, based on
# Alpine Linux.
FROM ARG_FROM

LABEL maintainer="Henrik Jonsson <me@hkjn.me>"

ARG cpu_arch

ENV USER_UID=500 \
    USER_GID=500 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    GOPATH=/home/user \
    PATH=$PATH:/home/user/bin \
    USER=user

RUN apk add --no-cache bash curl coreutils file git go musl-dev python3 openssh tmux vim && \
    apk add --no-cache --virtual .build-deps autoconf automake gcc g++ make libtool libc6-compat && \
    adduser -D user -u $USER_UID -g $USER_GID -s /bin/bash && \
    ln -s /usr/bin/python3 /usr/bin/python && \
    ln -s /usr/bin/pip3 /usr/bin/pip && \
    apk del .build-deps

# TODO(hkjn): Compile or download protoc binaries ourselves, if there's a way to make
# that work for armv7l under Alpine. Current binaries and .so files were taken from
# the arch flavor of this image.
COPY ["protoc-$cpu_arch/", "/lib64/"]
WORKDIR /lib64
RUN mv libc.so.6 libc-2.25.so libm.so.6 libm-2.25.so libpthread.so.0 libpthread-2.25.so /usr/lib/ && \
    mkdir -p /home/user/bin

# TODO: Could alternatively take $(id -u) and $(id -g) at run time,
# then create user in entrypoint script which then hands off to bash..
WORKDIR /home/user

COPY [".bash_profile", "./"]
RUN echo "source ~/.bash_profile" > .bashrc && \
    chown -R user:user /home/user

USER user

RUN go get github.com/golang/lint/golint \
           golang.org/x/tools/cmd/goimports \
           github.com/golang/dep/cmd/dep \
           github.com/jteeuwen/go-bindata/... \
           google.golang.org/grpc \
           github.com/golang/protobuf/protoc-gen-go && \
    curl -fsSLo protoc.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip && \
    unzip protoc.zip && \
    rm protoc.zip

ENTRYPOINT ["bash"]
